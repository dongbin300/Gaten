<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <BooleanToVisibilityConverter x:Key="btv"/>

    <SolidColorBrush x:Key="SoftBlack" Color="#202428"/>
    <SolidColorBrush x:Key="SoftWhite" Color="#E0E4E8"/>

    <!--#region Button -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#5B5D60" />
        <Setter Property="Foreground" Value="#F6F6F6" />
        <Setter Property="BorderBrush" Value="#87888B" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" CornerRadius="3"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          Content="{TemplateBinding Content}" 
                                          Margin="{TemplateBinding Padding}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#45484A" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="{x:Type c:ImageButton}" TargetType="{x:Type c:ImageButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ImageButton}">
                    <Grid>
                        <Image Source="{TemplateBinding Image}" Stretch="Fill"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#45484A" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--#endregion-->
    

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="3,2" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="DarkTextBlock">
        <Setter Property="Margin" Value="3,2" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#F4F4F4" />
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="3,2" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="DarkCheckBox">
        <Setter Property="Margin" Value="3,2" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#F4F4F4" />
    </Style>

    <Style TargetType="{x:Type RadioButton}" x:Key="DarkRadioButton">
        <Setter Property="Margin" Value="3,2" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#F4F4F4" />
    </Style>

    <!--<Style TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="3,2" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>-->

    <!--<Style TargetType="{x:Type ComboBox}" x:Key="DarkComboBox">
        <Setter Property="Margin" Value="3,2" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="#5B5D60" />
        <Setter Property="Foreground" Value="#F6F6F6" />
    </Style>-->

    <!--<Style TargetType="{x:Type ComboBoxItem}" x:Key="DarkComboBoxItem">
        <Setter Property="Background" Value="#5B5D60"/>
        <Setter Property="BorderBrush" Value="#5B5D60"/>
    </Style>-->
    
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="3,3" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="DarkTextBox">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#F4F4F4" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="CaretBrush" Value="Red" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border Name="border" Margin="3" CornerRadius="2" BorderThickness="1" 
                                BorderBrush="#717375" Background="#1B1D20">
                            <ScrollViewer Name="PART_ContentHost" FontSize="14" Background="Transparent"
                                     VerticalContentAlignment="Center" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                          Focusable="False"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#121315" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type PasswordBox}" x:Key="DarkPasswordBox">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border Name="border" Margin="3" CornerRadius="2" BorderThickness="1" BorderBrush="#717375" Background="#1B1D20">
                            <PasswordBox Name="passwordBox" BorderThickness="0" FontSize="14"
                                     Background="Transparent" Foreground="#F4F4f4"
                                     VerticalContentAlignment="Center" CaretBrush="Red"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#121315" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region MenuItem & Separator -->
    <Style TargetType="MenuItem" x:Key="MainMenuItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid Height="30" Background="#333" Width="{TemplateBinding Width}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="_border" Background="#333"/>
                        <TextBlock Foreground="#eee" Grid.Column="1" Margin="15,0" VerticalAlignment="Center" x:Name="_txt" Text="{Binding Header,RelativeSource={RelativeSource TemplatedParent}}" />
                        <Popup Placement="Bottom" x:Name="SubMenuPopup" AllowsTransparency="True"  Focusable="False" IsOpen="{TemplateBinding IsSubmenuOpen}" >
                            <ScrollViewer  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <Border Background="#888" Name="SubmenuBorder" BorderBrush="LightGray" BorderThickness="1" SnapsToDevicePixels="True"  >
                                    <StackPanel  IsItemsHost="True"  KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </ScrollViewer>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_border" Property="Background" Value="#666"/>
                            <Setter TargetName="_txt" Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="_txt" Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="MenuItem" x:Key="SubMenuItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid Height="30" Background="#333" Width="{TemplateBinding Width}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*" MinWidth="80"/>
                        </Grid.ColumnDefinitions>
                        <Border Background="#333"/>
                        <Border x:Name="_border"  Grid.ColumnSpan="2"/>
                        <Image x:Name="_imgicon" Width="12" Height="12" Stretch="Uniform"  Source="{Binding Icon.Source, RelativeSource={RelativeSource TemplatedParent}}" />
                        <TextBlock Foreground="#eee" Grid.Column="1" Margin="5 0 15 0" VerticalAlignment="Center" x:Name="_txt" Text="{Binding Header,RelativeSource={RelativeSource TemplatedParent}}" />
                        <Path Visibility="Collapsed" x:Name="_path" Grid.Column="1" HorizontalAlignment="Right" Margin="5 13 5 0"  Data="M0,4 4,0 0,-4 z" Fill="#7E8A92"/>
                        <Popup Placement="Right" x:Name="SubMenuPopup" AllowsTransparency="True"  Focusable="False" IsOpen="{TemplateBinding IsSubmenuOpen}" >
                            <ScrollViewer  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <Border Background="#888" Name="SubmenuBorder" BorderBrush="LightGray" BorderThickness="1" SnapsToDevicePixels="True"  >
                                    <StackPanel  IsItemsHost="True"  KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </ScrollViewer>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="true">
                            <Setter TargetName="_path" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_border" Property="Background" Value="#666"/>
                            <Setter TargetName="_txt" Property="Foreground" Value="White"/>
                            <Setter TargetName="_path" Property="Fill" Value="#333"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="_txt" Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Separator" x:Key="SubMenuSeparator">
        <Setter Property="Background" Value="#333"/>
        <Setter Property="Foreground" Value="#333"/>
        <Setter Property="Margin" Value="0,-1"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    <!--#endregion-->

    <!--#region ListBox -->
    <Style TargetType="{x:Type ListBoxItem}" x:Key="DarkListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Border Name="border" Margin="2" CornerRadius="4" SnapsToDevicePixels="True">
                            <ContentPresenter />
                            <!--<TextBlock Name="text" FontSize="14" Text="{TemplateBinding ListBoxItem}"/>-->
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#121315" />
                        </Trigger>
                        <!--<DataTrigger Binding="{Binding IsEnabled}" Value="True">
                            <Setter TargetName="text" Property="Opacity" Value="1.0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                            <Setter TargetName="text" Property="Opacity" Value="0.3"/>
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="DarkListBox">
        <Setter Property="Margin" Value="3,2" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="#5B5D60" />
        <Setter Property="Foreground" Value="#F6F6F6" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DarkListBoxItem}" />
    </Style>
    <!--#endregion-->
    
    <!--#region ComboBox -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid Margin="0,3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border      x:Name="Border"       Grid.ColumnSpan="2"      CornerRadius="2"
      Background="#1B1D20"      BorderBrush="#999"      BorderThickness="1" />
            <Border      x:Name="ContentBorder" Grid.Column="0"      CornerRadius="2,0,0,2"       Margin="1" 
      Background="#1B1D20"       BorderBrush="#999"      BorderThickness="0" />
            <Path       x:Name="Arrow"      Grid.Column="1"           Fill="#F4F4f4"
      HorizontalAlignment="Center"      VerticalAlignment="Center"      Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#121315" />
                <Setter TargetName="ContentBorder" Property="Background" Value="#121315" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#121315" />
                <Setter TargetName="ContentBorder" Property="Background" Value="#121315" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#1B1D20" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAA" />
                <Setter Property="Foreground" Value="#111"/>
                <Setter TargetName="Arrow" Property="Fill" Value="Transparent" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Foreground" Value="#F4F4F4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" 
            Template="{StaticResource ComboBoxToggleButton}" 
            Grid.Column="2" 
            Focusable="false"
            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite"
            IsHitTestVisible="False" 
            Content="{TemplateBinding SelectionBoxItem}"
            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
            Margin="3,3,23,3"
            VerticalAlignment="Center"
            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
            Style="{x:Null}" 
            Template="{StaticResource ComboBoxTextBox}" 
            HorizontalAlignment="Left" 
            VerticalAlignment="Center" 
            Margin="3,3,23,3"
            Focusable="True" 
            Background="Transparent"
            Visibility="Hidden"
            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup"
            Placement="Bottom"
            IsOpen="{TemplateBinding IsDropDownOpen}"
            AllowsTransparency="True" 
            Focusable="False"
            PopupAnimation="Slide">
                            <Grid Name="DropDown"
              SnapsToDevicePixels="True"
              MinWidth="{TemplateBinding ActualWidth}"
              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                Background="#5B5D60"
                BorderThickness="1"
                BorderBrush="#888"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <Style TargetType="{x:Type TreeViewItem}" x:Key="DarkTreeViewItem">
        <Setter Property="Foreground" Value="#F6F6F6" />
    </Style>

    <Style TargetType="{x:Type TreeView}" x:Key="DarkTreeView">
        <Setter Property="Margin" Value="3,2" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="#5B5D60" />
        <Setter Property="Foreground" Value="#F6F6F6" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DarkTreeViewItem}" />
    </Style>

    <Style TargetType="{x:Type GroupBox}" x:Key="DarkGroupBox">
        <Setter Property="Margin" Value="5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="#F6F6F6" />
        <Setter Property="Background" Value="#5B5D60" />
    </Style>

    <Style TargetType="{x:Type DataGridCell}" x:Key="DarkDataGridCell">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#F6F6F6" />
        <Setter Property="Background" Value="#5B5D60" />
    </Style>

    <Style TargetType="{x:Type DataGridRow}" x:Key="DarkDataGridRow">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#F6F6F6" />
        <Setter Property="Background" Value="#5B5D60" />
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#00FFFF" />
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="DarkDataGridColumnHeader">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#F6F6F6" />
        <Setter Property="Background" Value="#333" />
    </Style>

    <Style TargetType="{x:Type DataGrid}" x:Key="DarkDataGrid">
        <Setter Property="Margin" Value="3" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#F6F6F6" />
        <Setter Property="Background" Value="#5B5D60" />
        <Setter Property="HorizontalGridLinesBrush" Value="#F6F6F6" />
        <Setter Property="VerticalGridLinesBrush" Value="#F6F6F6" />
        <Setter Property="BorderBrush" Value="#F6F6F6" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="RowStyle" Value="{StaticResource DarkDataGridRow}" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DarkDataGridColumnHeader}" />
    </Style>


</ResourceDictionary>